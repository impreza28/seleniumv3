# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class Test():
    def setup_method(self):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def teardown_method(self):
        self.driver.quit()

    def test_add_to_cart(self):
        global name_item
        self.driver.get("http://localhost/litecart/public_html/en/")
        self.driver.set_window_size(1275, 729)
        for i in range(3):
            # нажать на карточку товара
            self.driver.find_element(By.CSS_SELECTOR, "#box-most-popular .product:nth-child(1) .image").click()
            # если есть поле выбора типа товара
            if len(self.driver.find_elements(By.NAME, "options[Size]")) == 1:
                #выбрать тип
                self.driver.find_element(By.NAME, "options[Size]").click()
                dropdown = self.driver.find_element(By.NAME, "options[Size]")
                dropdown.find_element(By.XPATH, "//option[2]").click()

            # добавить товар в корзину
            self.driver.find_element(By.NAME, "add_cart_product").click()
            # ждать заполнение корзины
            WebDriverWait(self.driver, 30).until(expected_conditions.text_to_be_present_in_element((By.CSS_SELECTOR, ".quantity"), f"{i+1}"))
            # перейти на главноую страницу
            self.driver.find_element(By.CSS_SELECTOR, "#logotype-wrapper img").click()

        # перейти в корзину
        self.driver.find_element(By.LINK_TEXT, "Checkout »").click()
        # ожидать открытия формы корзины
        WebDriverWait(self.driver, 5).until(expected_conditions.presence_of_element_located((By.ID, "main-wrapper")))

        count_items = len(self.driver.find_elements(By.XPATH, "//ul[@class='shortcuts']/li"))

        for i in range(count_items):

            if i < count_items-1:
                # нажать на shortcut первого товара
                self.driver.find_element(By.XPATH, "//ul[@class='shortcuts']/li/a").click()
                # ждать переключения на товар
                WebDriverWait(self.driver, 5).until(
                    expected_conditions.presence_of_element_located((By.XPATH, "//ul[@class='shortcuts']/li[1]/a[@class='inact act']")))
                # получить название товара
                name_item = self.driver.find_element(By.XPATH, "//form[@name='cart_form']//strong").get_attribute(
                    "textContent")
            # если товар 1, ожидать исчезновения блока shortcuts
            elif i == count_items-1:
                WebDriverWait(self.driver, 5).until(
                    expected_conditions.invisibility_of_element_located((By.XPATH, "//ul[@class='shortcuts']")))


            # удалить товар
            WebDriverWait(self.driver, 5).until(
                expected_conditions.element_to_be_clickable((By.NAME, "remove_cart_item")))
            self.driver.find_element(By.NAME, "remove_cart_item").click()
            WebDriverWait(self.driver, 5).until(
                expected_conditions.invisibility_of_element_located((By.XPATH, f"//strong[contains(.,'{name_item}')]")))


            #if len(self.driver.find_elements(By.LINK_TEXT, "<< Back")) < 0:

            # сформировать список товаров из таблицы
            table_name_items = len(self.driver.find_elements(By.XPATH, "//table[@class='dataTable rounded-corners']//td[@class='item']"))
            if table_name_items != 0:
                list_names=[]
                for j in range(table_name_items):
                    item = self.driver.find_element(By.XPATH, f"//table[@class='dataTable rounded-corners']//tr[{j+2}]/td[@class='item']").get_attribute("textContent")
                    list_names.append(item)

                assert name_item not in list_names, "Товар отображается в таблице товаров"

            else:
                WebDriverWait(self.driver, 5).until(
                    expected_conditions.presence_of_element_located((By.LINK_TEXT, "<< Back")))
                # вернуться на главную страницу
                #self.driver.find_element(By.LINK_TEXT, "<< Back").click()
               #WebDriverWait(self.driver, 5).until(expected_conditions.presence_of_element_located((By.CLASS_NAME, "middle")))

